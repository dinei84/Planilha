{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dinei\\\\Planilha\\\\planilha\\\\src\\\\components\\\\Planilha.js\",\n  _s = $RefreshSig$();\n// src/components/Planilha.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './Planilha.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planilha = () => {\n  _s();\n  const [driver, setDriver] = useState('');\n  const [phone, setPhone] = useState('');\n  const [owner, setOwner] = useState('');\n  const [drivers, setDrivers] = useState([]);\n  const [editIndex, setEditIndex] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    fetch('http://localhost:5000/drivers').then(response => response.json()).then(data => setDrivers(data));\n    if (location.state) {\n      const {\n        driver,\n        index\n      } = location.state;\n      setDriver(driver.driver);\n      setPhone(driver.phone);\n      setOwner(driver.owner);\n      setEditIndex(index);\n    }\n  }, [location.state]);\n  const handleAddOrEditDriver = () => {\n    if (driver && phone && owner) {\n      const newDriver = {\n        driver,\n        phone,\n        owner\n      };\n      if (editIndex !== null) {\n        const updatedDriver = {\n          ...drivers[editIndex],\n          ...newDriver\n        };\n        fetch(`http://localhost:5000/drivers/${drivers[editIndex].id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedDriver)\n        }).then(() => {\n          setDrivers(prevDrivers => {\n            const updatedDrivers = [...prevDrivers];\n            updatedDrivers[editIndex] = updatedDriver;\n            return updatedDrivers;\n          });\n          setEditIndex(null);\n        });\n      } else {\n        fetch('http://localhost:5000/drivers', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newDriver)\n        }).then(response => response.json()).then(data => setDrivers([...drivers, data]));\n      }\n      setDriver('');\n      setPhone('');\n      setOwner('');\n    } else {\n      alert('Por favor, preencha todos os campos.');\n    }\n  };\n  const handlePhoneInput = e => {\n    const x = e.target.value.replace(/\\D/g, '').match(/(\\d{0,2})(\\d{0,5})(\\d{0,4})/);\n    e.target.value = !x[2] ? x[1] : `(${x[1]}) ${x[2]}${x[3] ? '-' + x[3] : ''}`;\n    setPhone(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro de Motoristas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nome do Motorista\",\n      value: driver,\n      onChange: e => setDriver(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Telefone\",\n      value: phone,\n      onChange: handlePhoneInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Frotista (Propriet\\xE1rio)\",\n      value: owner,\n      onChange: e => setOwner(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddOrEditDriver,\n      children: editIndex !== null ? 'Editar' : 'Adicionar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/motoristas'),\n      children: \"Ver Lista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Planilha, \"decxGFGjR6Ctx5srMqaHWszOu8g=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Planilha;\nexport default Planilha;\nvar _c;\n$RefreshReg$(_c, \"Planilha\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","Planilha","_s","driver","setDriver","phone","setPhone","owner","setOwner","drivers","setDrivers","editIndex","setEditIndex","navigate","location","fetch","then","response","json","data","state","index","handleAddOrEditDriver","newDriver","updatedDriver","id","method","headers","body","JSON","stringify","prevDrivers","updatedDrivers","alert","handlePhoneInput","e","x","target","value","replace","match","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dinei/Planilha/planilha/src/components/Planilha.js"],"sourcesContent":["// src/components/Planilha.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './Planilha.css';\r\n\r\nconst Planilha = () => {\r\n  const [driver, setDriver] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [owner, setOwner] = useState('');\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/drivers')\r\n      .then(response => response.json())\r\n      .then(data => setDrivers(data));\r\n\r\n    if (location.state) {\r\n      const { driver, index } = location.state;\r\n      setDriver(driver.driver);\r\n      setPhone(driver.phone);\r\n      setOwner(driver.owner);\r\n      setEditIndex(index);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const handleAddOrEditDriver = () => {\r\n    if (driver && phone && owner) {\r\n      const newDriver = { driver, phone, owner };\r\n      if (editIndex !== null) {\r\n        const updatedDriver = { ...drivers[editIndex], ...newDriver };\r\n        fetch(`http://localhost:5000/drivers/${drivers[editIndex].id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(updatedDriver)\r\n        }).then(() => {\r\n          setDrivers(prevDrivers => {\r\n            const updatedDrivers = [...prevDrivers];\r\n            updatedDrivers[editIndex] = updatedDriver;\r\n            return updatedDrivers;\r\n          });\r\n          setEditIndex(null);\r\n        });\r\n      } else {\r\n        fetch('http://localhost:5000/drivers', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newDriver)\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => setDrivers([...drivers, data]));\r\n      }\r\n      setDriver('');\r\n      setPhone('');\r\n      setOwner('');\r\n    } else {\r\n      alert('Por favor, preencha todos os campos.');\r\n    }\r\n  };\r\n\r\n  const handlePhoneInput = (e) => {\r\n    const x = e.target.value.replace(/\\D/g, '').match(/(\\d{0,2})(\\d{0,5})(\\d{0,4})/);\r\n    e.target.value = !x[2] ? x[1] : `(${x[1]}) ${x[2]}${x[3] ? '-' + x[3] : ''}`;\r\n    setPhone(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cadastro de Motoristas</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Nome do Motorista\"\r\n        value={driver}\r\n        onChange={(e) => setDriver(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Telefone\"\r\n        value={phone}\r\n        onChange={handlePhoneInput}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Frotista (ProprietÃ¡rio)\"\r\n        value={owner}\r\n        onChange={(e) => setOwner(e.target.value)}\r\n      />\r\n      <button onClick={handleAddOrEditDriver}>\r\n        {editIndex !== null ? 'Editar' : 'Adicionar'}\r\n      </button>\r\n      <button onClick={() => navigate('/motoristas')}>Ver Lista</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planilha;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}