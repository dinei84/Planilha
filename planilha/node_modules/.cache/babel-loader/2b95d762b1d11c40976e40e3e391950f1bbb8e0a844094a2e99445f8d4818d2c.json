{"ast":null,"code":"// src/components/Planilha.js\nimport React,{useState,useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import'./Planilha.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Planilha=()=>{const[driver,setDriver]=useState('');const[phone,setPhone]=useState('');const[owner,setOwner]=useState('');const[drivers,setDrivers]=useState([]);const[editIndex,setEditIndex]=useState(null);const navigate=useNavigate();const location=useLocation();useEffect(()=>{fetch('http://localhost:5000/drivers').then(response=>response.json()).then(data=>setDrivers(data));if(location.state){const{driver,index}=location.state;setDriver(driver.driver);setPhone(driver.phone);setOwner(driver.owner);setEditIndex(index);}},[location.state]);const handleAddOrEditDriver=()=>{if(driver&&phone&&owner){const newDriver={driver,phone,owner};if(editIndex!==null){const updatedDriver={...drivers[editIndex],...newDriver};fetch(\"http://localhost:5000/drivers/\".concat(drivers[editIndex].id),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedDriver)}).then(()=>{setDrivers(prevDrivers=>{const updatedDrivers=[...prevDrivers];updatedDrivers[editIndex]=updatedDriver;return updatedDrivers;});setEditIndex(null);});}else{fetch('http://localhost:5000/drivers',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newDriver)}).then(response=>response.json()).then(data=>setDrivers([...drivers,data]));}setDriver('');setPhone('');setOwner('');}else{alert('Por favor, preencha todos os campos.');}};const handlePhoneInput=e=>{const x=e.target.value.replace(/\\D/g,'').match(/(\\d{0,2})(\\d{0,5})(\\d{0,4})/);e.target.value=!x[2]?x[1]:\"(\".concat(x[1],\") \").concat(x[2]).concat(x[3]?'-'+x[3]:'');setPhone(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Cadastro de Motoristas\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Nome do Motorista\",value:driver,onChange:e=>setDriver(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Telefone\",value:phone,onChange:handlePhoneInput}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Frotista (Propriet\\xE1rio)\",value:owner,onChange:e=>setOwner(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAddOrEditDriver,children:editIndex!==null?'Editar':'Adicionar'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/motoristas'),children:\"Ver Lista\"})]})]});};export default Planilha;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsx","_jsx","jsxs","_jsxs","Planilha","driver","setDriver","phone","setPhone","owner","setOwner","drivers","setDrivers","editIndex","setEditIndex","navigate","location","fetch","then","response","json","data","state","index","handleAddOrEditDriver","newDriver","updatedDriver","concat","id","method","headers","body","JSON","stringify","prevDrivers","updatedDrivers","alert","handlePhoneInput","e","x","target","value","replace","match","children","type","placeholder","onChange","className","onClick"],"sources":["C:/Users/Dinei/Planilha/planilha/src/components/Planilha.js"],"sourcesContent":["// src/components/Planilha.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './Planilha.css';\r\n\r\nconst Planilha = () => {\r\n  const [driver, setDriver] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [owner, setOwner] = useState('');\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/drivers')\r\n      .then(response => response.json())\r\n      .then(data => setDrivers(data));\r\n\r\n    if (location.state) {\r\n      const { driver, index } = location.state;\r\n      setDriver(driver.driver);\r\n      setPhone(driver.phone);\r\n      setOwner(driver.owner);\r\n      setEditIndex(index);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const handleAddOrEditDriver = () => {\r\n    if (driver && phone && owner) {\r\n      const newDriver = { driver, phone, owner };\r\n      if (editIndex !== null) {\r\n        const updatedDriver = { ...drivers[editIndex], ...newDriver };\r\n        fetch(`http://localhost:5000/drivers/${drivers[editIndex].id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(updatedDriver)\r\n        }).then(() => {\r\n          setDrivers(prevDrivers => {\r\n            const updatedDrivers = [...prevDrivers];\r\n            updatedDrivers[editIndex] = updatedDriver;\r\n            return updatedDrivers;\r\n          });\r\n          setEditIndex(null);\r\n        });\r\n      } else {\r\n        fetch('http://localhost:5000/drivers', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newDriver)\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => setDrivers([...drivers, data]));\r\n      }\r\n      setDriver('');\r\n      setPhone('');\r\n      setOwner('');\r\n    } else {\r\n      alert('Por favor, preencha todos os campos.');\r\n    }\r\n  };\r\n\r\n  const handlePhoneInput = (e) => {\r\n    const x = e.target.value.replace(/\\D/g, '').match(/(\\d{0,2})(\\d{0,5})(\\d{0,4})/);\r\n    e.target.value = !x[2] ? x[1] : `(${x[1]}) ${x[2]}${x[3] ? '-' + x[3] : ''}`;\r\n    setPhone(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cadastro de Motoristas</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Nome do Motorista\"\r\n        value={driver}\r\n        onChange={(e) => setDriver(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Telefone\"\r\n        value={phone}\r\n        onChange={handlePhoneInput}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Frotista (ProprietÃ¡rio)\"\r\n        value={owner}\r\n        onChange={(e) => setOwner(e.target.value)}\r\n      />\r\n      <div className=\"button-container\">\r\n        <button onClick={handleAddOrEditDriver}>\r\n          {editIndex !== null ? 'Editar' : 'Adicionar'}\r\n        </button>\r\n        <button onClick={() => navigate('/motoristas')}>Ver Lista</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planilha;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}